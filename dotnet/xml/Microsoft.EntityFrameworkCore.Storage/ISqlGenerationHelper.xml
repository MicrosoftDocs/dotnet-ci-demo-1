<Type Name="ISqlGenerationHelper" FullName="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper">
  <TypeSignature Language="C#" Value="public interface ISqlGenerationHelper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISqlGenerationHelper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISqlGenerationHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Provides services to help with generation of SQL commands.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BatchTerminator">
      <MemberSignature Language="C#" Value="public string BatchTerminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BatchTerminator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.BatchTerminator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BatchTerminator As String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The terminator to be used for batches of SQL statements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public string DelimitIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DelimitIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DelimitIdentifier (identifier As String) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier"> The identifier to delimit. </param>
        <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns> The generated string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public string DelimitIdentifier (string name, string schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DelimitIdentifier(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DelimitIdentifier (name As String, schema As String) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The identifier to delimit. </param>
        <param name="schema"> The schema of the identifier. </param>
        <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns> The generated string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public void DelimitIdentifier (System.Text.StringBuilder builder, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DelimitIdentifier(class System.Text.StringBuilder builder, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DelimitIdentifier (builder As StringBuilder, identifier As String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="identifier"> The identifier to delimit. </param>
        <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public void DelimitIdentifier (System.Text.StringBuilder builder, string name, string schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DelimitIdentifier(class System.Text.StringBuilder builder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DelimitIdentifier (builder As StringBuilder, name As String, schema As String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="name"> The identifier to delimit. </param>
        <param name="schema"> The schema of the identifier. </param>
        <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeIdentifier">
      <MemberSignature Language="C#" Value="public string EscapeIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EscapeIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EscapeIdentifier (identifier As String) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier"> The identifier to be escaped. </param>
        <summary>
                Generates the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns> The generated string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeIdentifier">
      <MemberSignature Language="C#" Value="public void EscapeIdentifier (System.Text.StringBuilder builder, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EscapeIdentifier(class System.Text.StringBuilder builder, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EscapeIdentifier (builder As StringBuilder, identifier As String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="identifier"> The identifier to be escaped. </param>
        <summary>
                Writes the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeLiteral">
      <MemberSignature Language="C#" Value="public string EscapeLiteral (string literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EscapeLiteral(string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeLiteral(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EscapeLiteral (literal As String) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="literal" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="literal"> The value to be escaped. </param>
        <summary>
                Generates the escaped SQL representation of a literal value.
            </summary>
        <returns> The generated string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeLiteral">
      <MemberSignature Language="C#" Value="public void EscapeLiteral (System.Text.StringBuilder builder, string literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EscapeLiteral(class System.Text.StringBuilder builder, string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeLiteral(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EscapeLiteral (builder As StringBuilder, literal As String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="literal" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="literal"> The value to be escaped. </param>
        <summary>
                Writes the escaped SQL representation of a literal value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLiteral">
      <MemberSignature Language="C#" Value="public string GenerateLiteral (object value, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateLiteral(object value, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateLiteral(System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateLiteral (value As Object, Optional typeMapping As RelationalTypeMapping = null) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
      </Parameters>
      <Docs>
        <param name="value"> The literal value. </param>
        <param name="typeMapping"> An optional type mapping that is used for this value. </param>
        <summary>
                Generates the SQL representation of a literal value.
            </summary>
        <returns> The generated string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLiteral">
      <MemberSignature Language="C#" Value="public void GenerateLiteral (System.Text.StringBuilder builder, object value, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateLiteral(class System.Text.StringBuilder builder, object value, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateLiteral(System.Text.StringBuilder,System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateLiteral (builder As StringBuilder, value As Object, Optional typeMapping As RelationalTypeMapping = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="value"> The literal value. </param>
        <param name="typeMapping"> An optional type mapping that is used for this value. </param>
        <summary>
                Writes the SQL representation of a literal value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterName">
      <MemberSignature Language="C#" Value="public string GenerateParameterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateParameterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateParameterName (name As String) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
                The candidate name for the parameter.
            </param>
        <summary>
                Generates a valid parameter name for the given candidate name.
            </summary>
        <returns> A valid name based on the candidate name. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterName">
      <MemberSignature Language="C#" Value="public void GenerateParameterName (System.Text.StringBuilder builder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateParameterName(class System.Text.StringBuilder builder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateParameterName (builder As StringBuilder, name As String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="name">
                The candidate name for the parameter.
            </param>
        <summary>
                Writes a valid parameter name for the given candidate name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatementTerminator">
      <MemberSignature Language="C#" Value="public string StatementTerminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatementTerminator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.StatementTerminator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StatementTerminator As String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The terminator to be used for SQL statements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>