<Type Name="IRelationalTransactionManager" FullName="Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager">
  <TypeSignature Language="C#" Value="public interface IRelationalTransactionManager : Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalTransactionManager implements class Microsoft.EntityFrameworkCore.Infrastructure.IResettableService, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalTransactionManager&#xA;Implements IDbContextTransactionManager" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Creates and manages the current transaction for a relational database.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel"> The isolation level to use for the transaction. </param>
        <summary>
                Begins a new transaction.
            </summary>
        <returns> The newly created transaction. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransactionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; BeginTransactionAsync (System.Data.IsolationLevel isolationLevel, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; BeginTransactionAsync(valuetype System.Data.IsolationLevel isolationLevel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="isolationLevel"> The isolation level to use for the transaction. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously begins a new transaction.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the newly created transaction.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction UseTransaction (System.Data.Common.DbTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction UseTransaction(class System.Data.Common.DbTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function UseTransaction (transaction As DbTransaction) As IDbContextTransaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
      </Parameters>
      <Docs>
        <param name="transaction"> The transaction to be used. </param>
        <summary>
                Specifies an existing <see cref="T:System.Data.Common.DbTransaction" /> to be used for database operations.
            </summary>
        <returns>
                An instance of <see cref="T:System.Data.IDbTransaction" /> that wraps the provided transaction.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>