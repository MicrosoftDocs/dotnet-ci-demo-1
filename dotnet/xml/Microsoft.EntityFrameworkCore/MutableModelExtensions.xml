<Type Name="MutableModelExtensions" FullName="Microsoft.EntityFrameworkCore.MutableModelExtensions">
  <TypeSignature Language="C#" Value="public static class MutableModelExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MutableModelExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.MutableModelExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MutableModelExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindEntityType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType FindEntityType (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType FindEntityType(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.FindEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="model"> The model to find the entity type in. </param>
        <param name="type"> The type to find the corresponding entity type for. </param>
        <summary>
                Gets the entity that maps the given entity class. Returns null if no entity type with the given name is found.
            </summary>
        <returns> The entity type, or null if none if found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindEntityType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType FindEntityType (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, Type type, string definingNavigationName, Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType definingEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType FindEntityType(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Type type, string definingNavigationName, class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType definingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.FindEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Type,System.String,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="definingNavigationName" Type="System.String" />
        <Parameter Name="definingEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
      </Parameters>
      <Docs>
        <param name="model"> The model to find the entity type in. </param>
        <param name="type"> The type of the entity type to find. </param>
        <param name="definingNavigationName"> The defining navigation of the entity type to find. </param>
        <param name="definingEntityType"> The defining entity type of the entity type to find. </param>
        <summary>
                Gets the entity type for the given name, defining navigation name
                and the defining entity type. Returns null if no matching entity type is found.
            </summary>
        <returns> The entity type, or null if none are found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddEntityType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType GetOrAddEntityType (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType GetOrAddEntityType(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.GetOrAddEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddEntityType (model As IMutableModel, name As String) As IMutableEntityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model"> The model to find or add the entity type to. </param>
        <param name="name"> The name of the entity type. </param>
        <summary>
                Gets the entity type with the given name or adds a new entity type if none is found.
            </summary>
        <returns> The existing or newly created entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddEntityType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType GetOrAddEntityType (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType GetOrAddEntityType(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.GetOrAddEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="model"> The model to find or add the entity type to. </param>
        <param name="type"> The CLR class of the entity type. </param>
        <summary>
                Gets the entity type with the given CLR class or adds a new entity type if none is found.
            </summary>
        <returns> The existing or newly created entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntityType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RemoveEntityType (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RemoveEntityType(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.RemoveEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveEntityType (model As IMutableModel, entityType As IMutableEntityType) As IMutableEntityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
      </Parameters>
      <Docs>
        <param name="model"> The model to remove the entity type from. </param>
        <param name="entityType"> The entity type to be removed. </param>
        <summary>
                Removes an entity type from the model.
            </summary>
        <returns> The entity type that was removed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntityType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RemoveEntityType (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RemoveEntityType(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.RemoveEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="model"> The model to remove the entity type from. </param>
        <param name="type"> The entity type to be removed. </param>
        <summary>
                Removes an entity type from the model.
            </summary>
        <returns> The entity type that was removed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntityType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RemoveEntityType (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, Type type, string definingNavigationName, Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType definingEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RemoveEntityType(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Type type, string definingNavigationName, class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType definingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.RemoveEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Type,System.String,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="definingNavigationName" Type="System.String" />
        <Parameter Name="definingEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
      </Parameters>
      <Docs>
        <param name="model"> The model to remove the entity type from. </param>
        <param name="type"> The CLR class that is used to represent instances of this entity type. </param>
        <param name="definingNavigationName"> The defining navigation. </param>
        <param name="definingEntityType"> The defining entity type. </param>
        <summary>
                Removes an entity type with a defining navigation from the model.
            </summary>
        <returns> The entity type that was removed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyAccessMode">
      <MemberSignature Language="C#" Value="public static void SetPropertyAccessMode (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode&gt; propertyAccessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPropertyAccessMode(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode&gt; propertyAccessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetPropertyAccessMode (model As IMutableModel, propertyAccessMode As Nullable(Of PropertyAccessMode))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="propertyAccessMode" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode&gt;" />
      </Parameters>
      <Docs>
        <param name="model"> The model to set the access mode for. </param>
        <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" />, or null to clear the mode set.</param>
        <summary>
          <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for properties of all entity types
                    in this model.
                </para>
          <para>
                    Note that individual entity types can override this access mode, and individual properties of
                    entity types can override the access mode set on the entity type. The value set here will
                    be used for any property for which no override has been specified.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyAccessMode">
      <MemberSignature Language="C#" Value="public static void SetPropertyAccessMode (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; propertyAccessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPropertyAccessMode(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; propertyAccessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Nullable{Microsoft.EntityFrameworkCore.PropertyAccessMode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetPropertyAccessMode (model As IMutableModel, propertyAccessMode As Nullable(Of PropertyAccessMode))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="propertyAccessMode" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt;" />
      </Parameters>
      <Docs>
        <param name="model"> The model to set the access mode for. </param>
        <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" />, or null to clear the mode set.</param>
        <summary>
          <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> to use for properties of all entity types
                    in this model.
                </para>
          <para>
                    Note that individual entity types can override this access mode, and individual properties of
                    entity types can override the access mode set on the entity type. The value set here will
                    be used for any property for which no override has been specified.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>