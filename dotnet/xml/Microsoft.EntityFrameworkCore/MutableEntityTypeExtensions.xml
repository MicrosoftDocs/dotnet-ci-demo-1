<Type Name="MutableEntityTypeExtensions" FullName="Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions">
  <TypeSignature Language="C#" Value="public static class MutableEntityTypeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MutableEntityTypeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MutableEntityTypeExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddForeignKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey AddForeignKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Microsoft.EntityFrameworkCore.Metadata.IMutableKey principalKey, Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey AddForeignKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, class Microsoft.EntityFrameworkCore.Metadata.IMutableKey principalKey, class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.AddForeignKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Metadata.IMutableKey,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddForeignKey (entityType As IMutableEntityType, property As IMutableProperty, principalKey As IMutableKey, principalEntityType As IMutableEntityType) As IMutableForeignKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />
        <Parameter Name="principalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableKey" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to add the foreign key to. </param>
        <param name="property"> The property that the foreign key is defined on. </param>
        <param name="principalKey"> The primary or alternate key that is referenced. </param>
        <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
        <summary>
                Adds a new relationship to this entity.
            </summary>
        <returns> The newly created foreign key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableIndex AddIndex (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex AddIndex(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.AddIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddIndex (entityType As IMutableEntityType, property As IMutableProperty) As IMutableIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to add the index to. </param>
        <param name="property"> The property to be indexed. </param>
        <summary>
                Adds an index to this entity.
            </summary>
        <returns> The newly created index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableKey AddKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableKey AddKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.AddKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddKey (entityType As IMutableEntityType, property As IMutableProperty) As IMutableKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to add the alternate key to. </param>
        <param name="property"> The property to use as an alternate key. </param>
        <summary>
                Adds a new alternate key to this entity type.
            </summary>
        <returns> The newly created key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableProperty AddProperty (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty AddProperty(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.AddProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to add the property to. </param>
        <param name="propertyInfo"> The corresponding property in the entity class. </param>
        <summary>
                Adds a property to this entity.
            </summary>
        <returns> The newly created property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindForeignKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey FindForeignKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Metadata.IKey principalKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey FindForeignKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Metadata.IKey principalKey, class Microsoft.EntityFrameworkCore.Metadata.IEntityType principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindForeignKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindForeignKey (entityType As IMutableEntityType, property As IProperty, principalKey As IKey, principalEntityType As IEntityType) As IMutableForeignKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="principalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the foreign keys on. </param>
        <param name="property"> The property that the foreign key is defined on. </param>
        <param name="principalKey"> The primary or alternate key that is referenced. </param>
        <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
        <summary>
                Gets the foreign key for the given properties that points to a given primary or alternate key. Returns null
                if no foreign key is found.
            </summary>
        <returns> The foreign key, or null if none is defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindForeignKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; FindForeignKeys (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; FindForeignKeys(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindForeignKeys (entityType As IMutableEntityType, property As IProperty) As IEnumerable(Of IMutableForeignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the foreign keys on. </param>
        <param name="property"> The property to find the foreign keys on. </param>
        <summary>
                Gets the foreign keys defined on the given property. Only foreign keys that are defined on exactly the specified
                property are returned. Composite foreign keys that include the specified property are not returned.
            </summary>
        <returns> The foreign keys. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindForeignKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; FindForeignKeys (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; FindForeignKeys(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindForeignKeys (entityType As IMutableEntityType, properties As IReadOnlyList(Of IProperty)) As IEnumerable(Of IMutableForeignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the foreign keys on. </param>
        <param name="properties"> The properties to find the foreign keys on. </param>
        <summary>
                Gets the foreign keys defined on the given properties. Only foreign keys that are defined on exactly the specified
                set of properties are returned.
            </summary>
        <returns> The foreign keys. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableIndex FindIndex (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex FindIndex(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndex (entityType As IMutableEntityType, property As IProperty) As IMutableIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the index on. </param>
        <param name="property"> The property to find the index on. </param>
        <summary>
                Gets the index defined on the given property. Returns null if no index is defined.
            </summary>
        <returns> The index, or null if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableKey FindKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableKey FindKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindKey (entityType As IMutableEntityType, property As IProperty) As IMutableKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the key on. </param>
        <param name="property"> The property that the key is defined on. </param>
        <summary>
                Gets the primary or alternate key that is defined on the given property. Returns null if no key is defined
                for the given property.
            </summary>
        <returns> The key, or null if none is defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNavigation">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation FindNavigation (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation FindNavigation(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the navigation property on. </param>
        <param name="propertyInfo"> The navigation property on the entity class. </param>
        <summary>
                Gets a navigation property on the given entity type. Returns null if no navigation property is found.
            </summary>
        <returns> The navigation property, or null if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNavigation">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation FindNavigation (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation FindNavigation(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindNavigation (entityType As IMutableEntityType, name As String) As IMutableNavigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the navigation property on. </param>
        <param name="name"> The name of the navigation property on the entity class. </param>
        <summary>
                Gets a navigation property on the given entity type. Returns null if no navigation property is found.
            </summary>
        <returns> The navigation property, or null if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableProperty FindProperty (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty FindProperty(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the property on. </param>
        <param name="propertyInfo"> The property on the entity class. </param>
        <summary>
          <para>
                    Gets a property on the given entity type. Returns null if no property is found.
                </para>
          <para>
                    This API only finds scalar properties and does not find navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)" /> to find a navigation property.
                </para>
        </summary>
        <returns> The property, or null if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDerivedTypes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType&gt; GetDerivedTypes (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType&gt; GetDerivedTypes(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetDerivedTypes(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDerivedTypes (entityType As IMutableEntityType) As IEnumerable(Of IMutableEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The base type to find types that derive from. </param>
        <summary>
                Gets all types in the model that derive from a given entity type.
            </summary>
        <returns> The derived types. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNavigations">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation&gt; GetNavigations (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation&gt; GetNavigations(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNavigations (entityType As IMutableEntityType) As IEnumerable(Of IMutableNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get navigation properties for. </param>
        <summary>
                Gets all navigation properties on the given entity type.
            </summary>
        <returns> All navigation properties on the given entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddForeignKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey GetOrAddForeignKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Microsoft.EntityFrameworkCore.Metadata.IMutableKey principalKey, Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey GetOrAddForeignKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, class Microsoft.EntityFrameworkCore.Metadata.IMutableKey principalKey, class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddForeignKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Metadata.IMutableKey,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddForeignKey (entityType As IMutableEntityType, property As IMutableProperty, principalKey As IMutableKey, principalEntityType As IMutableEntityType) As IMutableForeignKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />
        <Parameter Name="principalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableKey" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or add the foreign key to. </param>
        <param name="property"> The property that the foreign key is defined on. </param>
        <param name="principalKey"> The primary or alternate key that is referenced. </param>
        <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
        <summary>
                Gets an existing relationship, or creates a new one if one is not already defined.
            </summary>
        <returns> The existing or newly created foreign key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddForeignKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey GetOrAddForeignKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt; properties, Microsoft.EntityFrameworkCore.Metadata.IMutableKey principalKey, Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey GetOrAddForeignKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt; properties, class Microsoft.EntityFrameworkCore.Metadata.IMutableKey principalKey, class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddForeignKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty},Microsoft.EntityFrameworkCore.Metadata.IMutableKey,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddForeignKey (entityType As IMutableEntityType, properties As IReadOnlyList(Of IMutableProperty), principalKey As IMutableKey, principalEntityType As IMutableEntityType) As IMutableForeignKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt;" />
        <Parameter Name="principalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableKey" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or add the foreign key to. </param>
        <param name="properties"> The properties that the foreign key is defined on. </param>
        <param name="principalKey"> The primary or alternate key that is referenced. </param>
        <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
        <summary>
                Gets an existing relationship, or creates a new one if one is not already defined.
            </summary>
        <returns> The existing or newly created foreign key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableIndex GetOrAddIndex (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex GetOrAddIndex(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddIndex (entityType As IMutableEntityType, property As IMutableProperty) As IMutableIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or add the index to. </param>
        <param name="property"> The property to be indexed. </param>
        <summary>
                Gets the index defined on the given property or creates a new one if one is not already defined.
            </summary>
        <returns> The existing or newly created index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableIndex GetOrAddIndex (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex GetOrAddIndex(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddIndex (entityType As IMutableEntityType, properties As IReadOnlyList(Of IMutableProperty)) As IMutableIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or add the index to. </param>
        <param name="properties"> The properties to be indexed. </param>
        <summary>
                Gets the index defined on the given property or creates a new one if one is not already defined.
            </summary>
        <returns> The existing or newly created index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetOrAddKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetOrAddKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddKey (entityType As IMutableEntityType, property As IMutableProperty) As IMutableKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or create the alternate key on. </param>
        <param name="property"> The property that is used as the alternate key. </param>
        <summary>
                Gets the existing alternate key defined on a property, or creates a new one if one is not
                already defined.
            </summary>
        <returns> The existing or newly created alternate key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetOrAddKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetOrAddKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddKey (entityType As IMutableEntityType, properties As IReadOnlyList(Of IMutableProperty)) As IMutableKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or create the alternate key on. </param>
        <param name="properties"> The properties that are used as the alternate key. </param>
        <summary>
                Gets the existing alternate key defined on a set of properties, or creates a new one if one is not
                already defined.
            </summary>
        <returns> The existing or newly created alternate key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableProperty GetOrAddProperty (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty GetOrAddProperty(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or add the property to. </param>
        <param name="propertyInfo"> The corresponding property in the entity class. </param>
        <summary>
                Gets the property with the given name, or creates a new one if one is not already defined.
            </summary>
        <returns> The existing or newly created property. </returns>
        <remarks> The returned property might not have the specified type. </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableProperty GetOrAddProperty (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name, Type propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty GetOrAddProperty(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name, class System.Type propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddProperty (entityType As IMutableEntityType, name As String, propertyType As Type) As IMutableProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or add the property to. </param>
        <param name="name"> The name of the property. </param>
        <param name="propertyType"> The type of value the property will hold. </param>
        <summary>
                Gets the property with the given name, or creates a new one if one is not already defined.
            </summary>
        <returns> The existing or newly created property. </returns>
        <remarks> The returned property might not have the specified type. </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableProperty GetOrAddProperty (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name, Type propertyType, bool shadow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty GetOrAddProperty(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name, class System.Type propertyType, bool shadow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrAddProperty (entityType As IMutableEntityType, name As String, propertyType As Type, shadow As Boolean) As IMutableProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="shadow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or add the property to. </param>
        <param name="name"> The name of the property. </param>
        <param name="propertyType"> The type of value the property will hold. </param>
        <param name="shadow"> Whether the property is in shadow-state. </param>
        <summary>
                Gets the property with the given name, or creates a new one if one is not already defined.
            </summary>
        <returns> The existing or newly created property. </returns>
        <remarks> The returned property might not have the specified type and shadowness. </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrSetPrimaryKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetOrSetPrimaryKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetOrSetPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrSetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrSetPrimaryKey (entityType As IMutableEntityType, property As IMutableProperty) As IMutableKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or set the key on. </param>
        <param name="property"> The property to set as the primary key if one is not already defined. </param>
        <summary>
                Gets the existing primary key of an entity, or sets it if one is not defined.
            </summary>
        <returns> The existing or newly created key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrSetPrimaryKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetOrSetPrimaryKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetOrSetPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrSetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrSetPrimaryKey (entityType As IMutableEntityType, properties As IReadOnlyList(Of IMutableProperty)) As IMutableKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get or set the key on. </param>
        <param name="properties"> The properties to set as the primary key if one is not already defined. </param>
        <summary>
                Gets the existing primary key of an entity, or sets it if one is not defined.
            </summary>
        <returns> The existing or newly created key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencingForeignKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; GetReferencingForeignKeys (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; GetReferencingForeignKeys(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetReferencingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReferencingForeignKeys (entityType As IMutableEntityType) As IEnumerable(Of IMutableForeignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the foreign keys for. </param>
        <summary>
                Gets all foreign keys that target a given entity type (i.e. foreign keys where the given entity type
                is the principal).
            </summary>
        <returns> The foreign keys that reference the given entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RootType (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RootType(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.RootType(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RootType (entityType As IMutableEntityType) As IMutableEntityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The type to find the root of. </param>
        <summary>
                Gets the root base type for a given entity type.
            </summary>
        <returns>
                The root base type. If the given entity type is not a derived type, then the same entity type is returned.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrimaryKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableKey SetPrimaryKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableKey SetPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.SetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetPrimaryKey (entityType As IMutableEntityType, property As IMutableProperty) As IMutableKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to set the key on. </param>
        <param name="property"> The primary key property. </param>
        <summary>
                Sets the primary key for this entity.
            </summary>
        <returns> The newly created key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyAccessMode">
      <MemberSignature Language="C#" Value="public static void SetPropertyAccessMode (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode&gt; propertyAccessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPropertyAccessMode(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode&gt; propertyAccessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetPropertyAccessMode (entityType As IMutableEntityType, propertyAccessMode As Nullable(Of PropertyAccessMode))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="propertyAccessMode" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode&gt;" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type for which to set the access mode. </param>
        <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" />, or null to clear the mode set.</param>
        <summary>
          <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for properties of this entity type.
                </para>
          <para>
                    Note that individual properties can override this access mode. The value set here will
                    be used for any property for which no override has been specified.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyAccessMode">
      <MemberSignature Language="C#" Value="public static void SetPropertyAccessMode (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; propertyAccessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPropertyAccessMode(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; propertyAccessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Nullable{Microsoft.EntityFrameworkCore.PropertyAccessMode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetPropertyAccessMode (entityType As IMutableEntityType, propertyAccessMode As Nullable(Of PropertyAccessMode))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="propertyAccessMode" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt;" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type for which to set the access mode. </param>
        <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" />, or null to clear the mode set.</param>
        <summary>
          <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> to use for properties of this entity type.
                </para>
          <para>
                    Note that individual properties can override this access mode. The value set here will
                    be used for any property for which no override has been specified.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>