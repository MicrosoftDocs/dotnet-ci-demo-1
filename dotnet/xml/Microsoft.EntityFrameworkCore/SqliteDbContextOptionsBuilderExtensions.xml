<Type Name="SqliteDbContextOptionsBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.SqliteDbContextOptionsBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class SqliteDbContextOptionsBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqliteDbContextOptionsBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqliteDbContextOptionsBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqliteDbContextOptionsBuilderExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                SQLite specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="UseSqlite">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseSqlite (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, System.Data.Common.DbConnection connection, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt; sqliteOptionsAction = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseSqlite(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, class System.Data.Common.DbConnection connection, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt; sqliteOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteDbContextOptionsBuilderExtensions.UseSqlite(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Data.Common.DbConnection,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseSqlite (optionsBuilder As DbContextOptionsBuilder, connection As DbConnection, Optional sqliteOptionsAction As Action(Of SqliteDbContextOptionsBuilder) = null) As DbContextOptionsBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" RefType="this" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="sqliteOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder"> The builder being used to configure the context. </param>
        <param name="connection">
                An existing <see cref="T:System.Data.Common.DbConnection" /> to be used to connect to the database. If the connection is
                in the open state then EF will not open or close the connection. If the connection is in the closed
                state then EF will open and close the connection as needed.
            </param>
        <param name="sqliteOptionsAction">An optional action to allow additional SQLite specific configuration.</param>
        <summary>
                Configures the context to connect to a SQLite database.
            </summary>
        <returns> The options builder so that further configuration can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSqlite">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseSqlite (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, string connectionString, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt; sqliteOptionsAction = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseSqlite(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, string connectionString, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt; sqliteOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteDbContextOptionsBuilderExtensions.UseSqlite(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseSqlite (optionsBuilder As DbContextOptionsBuilder, connectionString As String, Optional sqliteOptionsAction As Action(Of SqliteDbContextOptionsBuilder) = null) As DbContextOptionsBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" RefType="this" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="sqliteOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder"> The builder being used to configure the context. </param>
        <param name="connectionString"> The connection string of the database to connect to. </param>
        <param name="sqliteOptionsAction">An optional action to allow additional SQLite specific configuration.</param>
        <summary>
                Configures the context to connect to a SQLite database.
            </summary>
        <returns> The options builder so that further configuration can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSqlite&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; UseSqlite&lt;TContext&gt; (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; optionsBuilder, System.Data.Common.DbConnection connection, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt; sqliteOptionsAction = null) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; UseSqlite&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt;(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; optionsBuilder, class System.Data.Common.DbConnection connection, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt; sqliteOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteDbContextOptionsBuilderExtensions.UseSqlite``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Data.Common.DbConnection,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseSqlite(Of TContext As DbContext) (optionsBuilder As DbContextOptionsBuilder(Of TContext), connection As DbConnection, Optional sqliteOptionsAction As Action(Of SqliteDbContextOptionsBuilder) = null) As DbContextOptionsBuilder(Of TContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;" RefType="this" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="sqliteOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContext"> The type of context to be configured. </typeparam>
        <param name="optionsBuilder"> The builder being used to configure the context. </param>
        <param name="connection">
                An existing <see cref="T:System.Data.Common.DbConnection" /> to be used to connect to the database. If the connection is
                in the open state then EF will not open or close the connection. If the connection is in the closed
                state then EF will open and close the connection as needed.
            </param>
        <param name="sqliteOptionsAction">An optional action to allow additional SQLite specific configuration.</param>
        <summary>
                Configures the context to connect to a SQLite database.
            </summary>
        <returns> The options builder so that further configuration can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSqlite&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; UseSqlite&lt;TContext&gt; (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; optionsBuilder, string connectionString, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt; sqliteOptionsAction = null) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; UseSqlite&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt;(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; optionsBuilder, string connectionString, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt; sqliteOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteDbContextOptionsBuilderExtensions.UseSqlite``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseSqlite(Of TContext As DbContext) (optionsBuilder As DbContextOptionsBuilder(Of TContext), connectionString As String, Optional sqliteOptionsAction As Action(Of SqliteDbContextOptionsBuilder) = null) As DbContextOptionsBuilder(Of TContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;" RefType="this" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="sqliteOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.SqliteDbContextOptionsBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContext"> The type of context to be configured. </typeparam>
        <param name="optionsBuilder"> The builder being used to configure the context. </param>
        <param name="connectionString"> The connection string of the database to connect to. </param>
        <param name="sqliteOptionsAction">An optional action to allow additional SQLite specific configuration.</param>
        <summary>
                Configures the context to connect to a SQLite database.
            </summary>
        <returns> The options builder so that further configuration can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>