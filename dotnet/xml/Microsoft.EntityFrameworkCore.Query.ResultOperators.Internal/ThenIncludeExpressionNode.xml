<Type Name="ThenIncludeExpressionNode" FullName="Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode">
  <TypeSignature Language="C#" Value="public class ThenIncludeExpressionNode : Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThenIncludeExpressionNode extends Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode" />
  <TypeSignature Language="VB.NET" Value="Public Class ThenIncludeExpressionNode&#xA;Inherits ResultOperatorExpressionNodeBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Remotion.Linq.Parsing.Structure.IntermediateModel.ResultOperatorExpressionNodeBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThenIncludeExpressionNode (Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo parseInfo, System.Linq.Expressions.LambdaExpression navigationPropertyPathLambda);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo parseInfo, class System.Linq.Expressions.LambdaExpression navigationPropertyPathLambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parseInfo As MethodCallExpressionParseInfo, navigationPropertyPathLambda As LambdaExpression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parseInfo" Type="Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo" />
        <Parameter Name="navigationPropertyPathLambda" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="parseInfo">To be added.</param>
        <param name="navigationPropertyPathLambda">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNodeSpecificSemantics">
      <MemberSignature Language="C#" Value="protected override void ApplyNodeSpecificSemantics (Remotion.Linq.QueryModel queryModel, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext clauseGenerationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyNodeSpecificSemantics(class Remotion.Linq.QueryModel queryModel, valuetype Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext clauseGenerationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="clauseGenerationContext" Type="Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext" />
      </Parameters>
      <Docs>
        <param name="queryModel">To be added.</param>
        <param name="clauseGenerationContext">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResultOperator">
      <MemberSignature Language="C#" Value="protected override Remotion.Linq.Clauses.ResultOperatorBase CreateResultOperator (Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext clauseGenerationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Remotion.Linq.Clauses.ResultOperatorBase CreateResultOperator(valuetype Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext clauseGenerationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Clauses.ResultOperatorBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clauseGenerationContext" Type="Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext" />
      </Parameters>
      <Docs>
        <param name="clauseGenerationContext">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Resolve (System.Linq.Expressions.ParameterExpression inputParameter, System.Linq.Expressions.Expression expressionToBeResolved, Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext clauseGenerationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression Resolve(class System.Linq.Expressions.ParameterExpression inputParameter, class System.Linq.Expressions.Expression expressionToBeResolved, valuetype Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext clauseGenerationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputParameter" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="expressionToBeResolved" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="clauseGenerationContext" Type="Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext" />
      </Parameters>
      <Docs>
        <param name="inputParameter">To be added.</param>
        <param name="expressionToBeResolved">To be added.</param>
        <param name="clauseGenerationContext">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedMethods">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Generic.IReadOnlyCollection&lt;System.Reflection.MethodInfo&gt; SupportedMethods;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Generic.IReadOnlyCollection`1&lt;class System.Reflection.MethodInfo&gt; SupportedMethods" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.SupportedMethods" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SupportedMethods As IReadOnlyCollection(Of MethodInfo) " />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.Reflection.MethodInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>