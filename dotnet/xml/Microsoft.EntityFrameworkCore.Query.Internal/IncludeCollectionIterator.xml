<Type Name="IncludeCollectionIterator" FullName="Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator">
  <TypeSignature Language="C#" Value="public class IncludeCollectionIterator : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IncludeCollectionIterator extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator" />
  <TypeSignature Language="VB.NET" Value="Public Class IncludeCollectionIterator&#xA;Implements IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IncludeCollectionIterator (System.Collections.Generic.IEnumerator&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer&gt; relatedValuesEnumerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerator`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer&gt; relatedValuesEnumerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator.#ctor(System.Collections.Generic.IEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relatedValuesEnumerator As IEnumerator(Of ValueBuffer))" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relatedValuesEnumerator" Type="System.Collections.Generic.IEnumerator&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer&gt;" />
      </Parameters>
      <Docs>
        <param name="relatedValuesEnumerator">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer&gt; GetRelatedValues (Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer&gt; GetRelatedValues(class Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator.GetRelatedValues(Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable Function GetRelatedValues (keyComparer As IIncludeKeyComparer) As IEnumerable(Of ValueBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator/&lt;GetRelatedValues&gt;d__4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer" />
      </Parameters>
      <Docs>
        <param name="keyComparer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>