<Type Name="IQueryBuffer" FullName="Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer">
  <TypeSignature Language="C#" Value="public interface IQueryBuffer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryBuffer implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryBuffer&#xA;Implements IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public object GetEntity (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.Query.EntityLoadInfo entityLoadInfo, bool queryStateManager, bool throwOnNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEntity(class Microsoft.EntityFrameworkCore.Metadata.IKey key, valuetype Microsoft.EntityFrameworkCore.Query.EntityLoadInfo entityLoadInfo, bool queryStateManager, bool throwOnNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="entityLoadInfo" Type="Microsoft.EntityFrameworkCore.Query.EntityLoadInfo" />
        <Parameter Name="queryStateManager" Type="System.Boolean" />
        <Parameter Name="throwOnNullKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="entityLoadInfo">To be added.</param>
        <param name="queryStateManager">To be added.</param>
        <param name="throwOnNullKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (object entity, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyValue(object entity, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (entity As Object, property As IProperty) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public void Include (Microsoft.EntityFrameworkCore.Query.QueryContext queryContext, object entity, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; navigationPath, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader&gt; relatedEntitiesLoaders, bool queryStateManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include(class Microsoft.EntityFrameworkCore.Query.QueryContext queryContext, object entity, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; navigationPath, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader&gt; relatedEntitiesLoaders, bool queryStateManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryContext" Type="Microsoft.EntityFrameworkCore.Query.QueryContext" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="navigationPath" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;" />
        <Parameter Name="relatedEntitiesLoaders" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader&gt;" />
        <Parameter Name="queryStateManager" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="queryContext">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="navigationPath">To be added.</param>
        <param name="relatedEntitiesLoaders">To be added.</param>
        <param name="queryStateManager">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task IncludeAsync (Microsoft.EntityFrameworkCore.Query.QueryContext queryContext, object entity, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; navigationPath, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader&gt; relatedEntitiesLoaders, bool queryStateManager, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task IncludeAsync(class Microsoft.EntityFrameworkCore.Query.QueryContext queryContext, object entity, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; navigationPath, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader&gt; relatedEntitiesLoaders, bool queryStateManager, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryContext" Type="Microsoft.EntityFrameworkCore.Query.QueryContext" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="navigationPath" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;" />
        <Parameter Name="relatedEntitiesLoaders" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader&gt;" />
        <Parameter Name="queryStateManager" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queryContext">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="navigationPath">To be added.</param>
        <param name="relatedEntitiesLoaders">To be added.</param>
        <param name="queryStateManager">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeCollection">
      <MemberSignature Language="C#" Value="public void IncludeCollection (int includeId, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.Metadata.INavigation inverseNavigation, Microsoft.EntityFrameworkCore.Metadata.IEntityType targetEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor clrCollectionAccessor, Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter inverseClrPropertySetter, bool tracking, object instance, Func&lt;System.Collections.Generic.IEnumerable&lt;object&gt;&gt; valuesFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncludeCollection(int32 includeId, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation inverseNavigation, class Microsoft.EntityFrameworkCore.Metadata.IEntityType targetEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor clrCollectionAccessor, class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter inverseClrPropertySetter, bool tracking, object instance, class System.Func`1&lt;class System.Collections.Generic.IEnumerable`1&lt;object&gt;&gt; valuesFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeCollection(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter,System.Boolean,System.Object,System.Func{System.Collections.Generic.IEnumerable{System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeCollection (includeId As Integer, navigation As INavigation, inverseNavigation As INavigation, targetEntityType As IEntityType, clrCollectionAccessor As IClrCollectionAccessor, inverseClrPropertySetter As IClrPropertySetter, tracking As Boolean, instance As Object, valuesFactory As Func(Of IEnumerable(Of Object)))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeId" Type="System.Int32" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="inverseNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="targetEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="clrCollectionAccessor" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor" />
        <Parameter Name="inverseClrPropertySetter" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter" />
        <Parameter Name="tracking" Type="System.Boolean" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="valuesFactory" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="includeId">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="inverseNavigation">To be added.</param>
        <param name="targetEntityType">To be added.</param>
        <param name="clrCollectionAccessor">To be added.</param>
        <param name="inverseClrPropertySetter">To be added.</param>
        <param name="tracking">To be added.</param>
        <param name="instance">To be added.</param>
        <param name="valuesFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task IncludeCollectionAsync (int includeId, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.Metadata.INavigation inverseNavigation, Microsoft.EntityFrameworkCore.Metadata.IEntityType targetEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor clrCollectionAccessor, Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter inverseClrPropertySetter, bool tracking, object instance, Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;object&gt;&gt; valuesFactory, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task IncludeCollectionAsync(int32 includeId, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation inverseNavigation, class Microsoft.EntityFrameworkCore.Metadata.IEntityType targetEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor clrCollectionAccessor, class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter inverseClrPropertySetter, bool tracking, object instance, class System.Func`1&lt;class System.Collections.Generic.IAsyncEnumerable`1&lt;object&gt;&gt; valuesFactory, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeCollectionAsync(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter,System.Boolean,System.Object,System.Func{System.Collections.Generic.IAsyncEnumerable{System.Object}},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeId" Type="System.Int32" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="inverseNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="targetEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="clrCollectionAccessor" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor" />
        <Parameter Name="inverseClrPropertySetter" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter" />
        <Parameter Name="tracking" Type="System.Boolean" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="valuesFactory" Type="System.Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;System.Object&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includeId">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="inverseNavigation">To be added.</param>
        <param name="targetEntityType">To be added.</param>
        <param name="clrCollectionAccessor">To be added.</param>
        <param name="inverseClrPropertySetter">To be added.</param>
        <param name="tracking">To be added.</param>
        <param name="instance">To be added.</param>
        <param name="valuesFactory">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public void StartTracking (object entity, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartTracking(object entity, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartTracking (entity As Object, entityType As IEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public void StartTracking (object entity, Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo entityTrackingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartTracking(object entity, class Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo entityTrackingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityTrackingInfo" Type="Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="entityTrackingInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>