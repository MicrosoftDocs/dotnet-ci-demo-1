<Type Name="InternalServiceCollectionMap" FullName="Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap">
  <TypeSignature Language="C#" Value="public class InternalServiceCollectionMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InternalServiceCollectionMap extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap" />
  <TypeSignature Language="VB.NET" Value="Public Class InternalServiceCollectionMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalServiceCollectionMap (Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceCollection As IServiceCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="serviceCollection">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDependency">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap AddDependency (Type serviceType, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap AddDependency(class System.Type serviceType, valuetype Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap.AddDependency(System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDependency (serviceType As Type, lifetime As ServiceLifetime) As InternalServiceCollectionMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="lifetime" Type="Microsoft.Extensions.DependencyInjection.ServiceLifetime" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <param name="lifetime">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDependencyScoped&lt;TDependencies&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap AddDependencyScoped&lt;TDependencies&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap AddDependencyScoped&lt;TDependencies&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap.AddDependencyScoped``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDependencyScoped(Of TDependencies) () As InternalServiceCollectionMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDependencies" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TDependencies">To be added.</typeparam>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDependencySingleton&lt;TDependencies&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap AddDependencySingleton&lt;TDependencies&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap AddDependencySingleton&lt;TDependencies&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap.AddDependencySingleton``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDependencySingleton(Of TDependencies) () As InternalServiceCollectionMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDependencies" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TDependencies">To be added.</typeparam>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNewDescriptor">
      <MemberSignature Language="C#" Value="public virtual void AddNewDescriptor (System.Collections.Generic.IList&lt;int&gt; indexes, Microsoft.Extensions.DependencyInjection.ServiceDescriptor newDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNewDescriptor(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor newDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap.AddNewDescriptor(System.Collections.Generic.IList{System.Int32},Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddNewDescriptor (indexes As IList(Of Integer), newDescriptor As ServiceDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="newDescriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="indexes">To be added.</param>
        <param name="newDescriptor">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoPatchInjection&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap DoPatchInjection&lt;TService&gt; () where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap DoPatchInjection&lt;class TService&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap.DoPatchInjection``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DoPatchInjection(Of TService As Class) () As InternalServiceCollectionMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TService"> The service contract. </typeparam>
        <summary>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
          <para>
                    Re-writes the registration for the given service such that if the implementation type
                    implements <see cref="T:Microsoft.EntityFrameworkCore.Internal.IPatchServiceInjectionSite" />, then
                    <see cref="M:Microsoft.EntityFrameworkCore.Internal.IPatchServiceInjectionSite.InjectServices(System.IServiceProvider)" /> will be called while resolving
                    the service allowing additional services to be injected without breaking the existing
                    constructor.
                </para>
          <para>
                    This mechanism should only be used to allow new services to be injected in a patch or
                    point release without making binary breaking changes.
                </para>
        </summary>
        <returns> The map, such that further calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateDescriptorIndexes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;int&gt; GetOrCreateDescriptorIndexes (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; GetOrCreateDescriptorIndexes(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap.GetOrCreateDescriptorIndexes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrCreateDescriptorIndexes (serviceType As Type) As IList(Of Integer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCollection">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.DependencyInjection.IServiceCollection ServiceCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.IServiceCollection ServiceCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.InternalServiceCollectionMap.ServiceCollection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ServiceCollection As IServiceCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>