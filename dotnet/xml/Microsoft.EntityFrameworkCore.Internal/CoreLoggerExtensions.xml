<Type Name="CoreLoggerExtensions" FullName="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions">
  <TypeSignature Language="C#" Value="public static class CoreLoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CoreLoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CoreLoggerExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContextInitialized">
      <MemberSignature Language="C#" Value="public static void ContextInitialized (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Microsoft.EntityFrameworkCore.DbContextOptions contextOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContextInitialized(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class Microsoft.EntityFrameworkCore.DbContextOptions contextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ContextInitialized(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ContextInitialized (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, contextOptions As DbContextOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateDependentEntityTypeInstanceWarning">
      <MemberSignature Language="C#" Value="public static void DuplicateDependentEntityTypeInstanceWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent1, Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DuplicateDependentEntityTypeInstanceWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent1, class Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DuplicateDependentEntityTypeInstanceWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DuplicateDependentEntityTypeInstanceWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), dependent1 As IEntityType, dependent2 As IEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="dependent1" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="dependent2" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="dependent1">To be added.</param>
        <param name="dependent2">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstWithoutOrderByAndFilterWarning">
      <MemberSignature Language="C#" Value="public static void FirstWithoutOrderByAndFilterWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FirstWithoutOrderByAndFilterWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.FirstWithoutOrderByAndFilterWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeIgnoredWarning">
      <MemberSignature Language="C#" Value="public static void IncludeIgnoredWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator includeResultOperator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncludeIgnoredWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator includeResultOperator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.IncludeIgnoredWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="includeResultOperator" Type="Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="includeResultOperator">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManyServiceProvidersCreatedWarning">
      <MemberSignature Language="C#" Value="public static void ManyServiceProvidersCreatedWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, System.Collections.Generic.ICollection&lt;IServiceProvider&gt; serviceProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ManyServiceProvidersCreatedWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.Collections.Generic.ICollection`1&lt;class System.IServiceProvider&gt; serviceProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ManyServiceProvidersCreatedWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.Collections.Generic.ICollection{System.IServiceProvider})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ManyServiceProvidersCreatedWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), serviceProviders As ICollection(Of IServiceProvider))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="serviceProviders" Type="System.Collections.Generic.ICollection&lt;System.IServiceProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="serviceProviders">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationIncluded">
      <MemberSignature Language="C#" Value="public static void NavigationIncluded (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator includeResultOperator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NavigationIncluded(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator includeResultOperator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NavigationIncluded(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="includeResultOperator" Type="Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="includeResultOperator">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleUnintendedCollectionNavigationNullComparisonWarning">
      <MemberSignature Language="C#" Value="public static void PossibleUnintendedCollectionNavigationNullComparisonWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; navigationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PossibleUnintendedCollectionNavigationNullComparisonWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; navigationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PossibleUnintendedCollectionNavigationNullComparisonWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PossibleUnintendedCollectionNavigationNullComparisonWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), navigationPath As IReadOnlyCollection(Of IPropertyBase))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="navigationPath" Type="System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="navigationPath">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleUnintendedReferenceComparisonWarning">
      <MemberSignature Language="C#" Value="public static void PossibleUnintendedReferenceComparisonWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PossibleUnintendedReferenceComparisonWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PossibleUnintendedReferenceComparisonWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PossibleUnintendedReferenceComparisonWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), left As Expression, right As Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryExecutionPlanned">
      <MemberSignature Language="C#" Value="public static void QueryExecutionPlanned (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter expressionPrinter, System.Linq.Expressions.Expression queryExecutorExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryExecutionPlanned(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter expressionPrinter, class System.Linq.Expressions.Expression queryExecutorExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryExecutionPlanned(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryExecutionPlanned (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), expressionPrinter As IExpressionPrinter, queryExecutorExpression As Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" />
        <Parameter Name="queryExecutorExpression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="expressionPrinter">To be added.</param>
        <param name="queryExecutorExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryIterationFailed">
      <MemberSignature Language="C#" Value="public static void QueryIterationFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Type contextType, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryIterationFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Type contextType, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryIterationFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Type,System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="contextType">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryModelCompiling">
      <MemberSignature Language="C#" Value="public static void QueryModelCompiling (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryModelCompiling(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryModelCompiling(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryModelOptimized">
      <MemberSignature Language="C#" Value="public static void QueryModelOptimized (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryModelOptimized(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryModelOptimized(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowLimitingOperationWithoutOrderByWarning">
      <MemberSignature Language="C#" Value="public static void RowLimitingOperationWithoutOrderByWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowLimitingOperationWithoutOrderByWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RowLimitingOperationWithoutOrderByWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesFailed">
      <MemberSignature Language="C#" Value="public static void SaveChangesFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveChangesFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SaveChangesFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SensitiveDataLoggingEnabledWarning&lt;TLoggerCategory&gt;">
      <MemberSignature Language="C#" Value="public static void SensitiveDataLoggingEnabledWarning&lt;TLoggerCategory&gt; (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt; diagnostics) where TLoggerCategory : Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SensitiveDataLoggingEnabledWarning&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!!TLoggerCategory&gt;) TLoggerCategory&gt;(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;!!TLoggerCategory&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SensitiveDataLoggingEnabledWarning``1(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SensitiveDataLoggingEnabledWarning(Of TLoggerCategory As {LoggerCategory(Of TLoggerCategory)New}) (diagnostics As IDiagnosticsLogger(Of TLoggerCategory))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLoggerCategory">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TLoggerCategory">To be added.</typeparam>
        <param name="diagnostics">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProviderCreated">
      <MemberSignature Language="C#" Value="public static void ServiceProviderCreated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceProviderCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ServiceProviderCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ServiceProviderCreated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), serviceProvider As IServiceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="serviceProvider">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>