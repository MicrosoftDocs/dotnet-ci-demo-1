<Type Name="NonCapturingLazyInitializer" FullName="Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer">
  <TypeSignature Language="C#" Value="public static class NonCapturingLazyInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NonCapturingLazyInitializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Class NonCapturingLazyInitializer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EnsureInitialized&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue EnsureInitialized&lt;TValue&gt; (ref TValue target, TValue value) where TValue : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue EnsureInitialized&lt;class TValue&gt;(!!TValue&amp; target, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer.EnsureInitialized``1(``0@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnsureInitialized(Of TValue As Class) (ByRef target As TValue, value As TValue) As TValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TValue&amp;" RefType="ref" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="target">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureInitialized&lt;TParam,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue EnsureInitialized&lt;TParam,TValue&gt; (ref TValue target, TParam param, Func&lt;TParam,TValue&gt; valueFactory) where TValue : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue EnsureInitialized&lt;TParam, class TValue&gt;(!!TValue&amp; target, !!TParam param, class System.Func`2&lt;!!TParam, !!TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer.EnsureInitialized``2(``1@,``0,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnsureInitialized(Of TParam, TValue) (ByRef target As TValue, param As TParam, valueFactory As Func(Of TParam, TValue)) As TValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam" />
        <TypeParameter Name="TValue">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TValue&amp;" RefType="ref" />
        <Parameter Name="param" Type="TParam" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TParam,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TParam">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="target">To be added.</param>
        <param name="param">To be added.</param>
        <param name="valueFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureInitialized&lt;TParam1,TParam2,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue EnsureInitialized&lt;TParam1,TParam2,TValue&gt; (ref TValue target, TParam1 param1, TParam2 param2, Func&lt;TParam1,TParam2,TValue&gt; valueFactory) where TValue : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue EnsureInitialized&lt;TParam1, TParam2, class TValue&gt;(!!TValue&amp; target, !!TParam1 param1, !!TParam2 param2, class System.Func`3&lt;!!TParam1, !!TParam2, !!TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer.EnsureInitialized``3(``2@,``0,``1,System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnsureInitialized(Of TParam1, TParam2, TValue) (ByRef target As TValue, param1 As TParam1, param2 As TParam2, valueFactory As Func(Of TParam1, TParam2, TValue)) As TValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TValue">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TValue&amp;" RefType="ref" />
        <Parameter Name="param1" Type="TParam1" />
        <Parameter Name="param2" Type="TParam2" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TParam1,TParam2,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="target">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="valueFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>