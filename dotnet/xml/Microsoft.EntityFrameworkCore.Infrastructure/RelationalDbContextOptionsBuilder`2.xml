<Type Name="RelationalDbContextOptionsBuilder&lt;TBuilder,TExtension&gt;" FullName="Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder&lt;TBuilder,TExtension&gt;">
  <TypeSignature Language="C#" Value="public abstract class RelationalDbContextOptionsBuilder&lt;TBuilder,TExtension&gt; where TBuilder : RelationalDbContextOptionsBuilder&lt;TBuilder,TExtension&gt; where TExtension : RelationalOptionsExtensionnew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RelationalDbContextOptionsBuilder`2&lt;(class Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2&lt;!TBuilder, !TExtension&gt;) TBuilder, .ctor (class Microsoft.EntityFrameworkCore.Infrastructure.RelationalOptionsExtension) TExtension&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RelationalDbContextOptionsBuilder(Of TBuilder, TExtension)" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TBuilder">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder&lt;TBuilder,TExtension&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TExtension">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.RelationalOptionsExtension</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TBuilder">To be added.</typeparam>
    <typeparam name="TExtension">To be added.</typeparam>
    <summary>
      <para>
                    Allows relational database specific configuration to be performed on <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />.
                </para>
      <para>
                    Instances of this class are typically returned from methods that configure the context to use a
                    particular relational database provider.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalDbContextOptionsBuilder (Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.#ctor(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (optionsBuilder As DbContextOptionsBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder"> The core options builder. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneExtension">
      <MemberSignature Language="C#" Value="protected abstract TExtension CloneExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TExtension CloneExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.CloneExtension" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CloneExtension () As TExtension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TExtension</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Clones the configuration in this builder.
            </summary>
        <returns> The cloned configuration. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public virtual TBuilder CommandTimeout (Nullable&lt;int&gt; commandTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBuilder CommandTimeout(valuetype System.Nullable`1&lt;int32&gt; commandTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.CommandTimeout(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandTimeout (commandTimeout As Nullable(Of Integer)) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="commandTimeout"> The time in seconds to wait for the command to execute. </param>
        <summary>
                Configures the wait time (in seconds) before terminating the attempt to execute a command and generating an error.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategy">
      <MemberSignature Language="C#" Value="public virtual TBuilder ExecutionStrategy (Func&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy&gt; getExecutionStrategy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBuilder ExecutionStrategy(class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy&gt; getExecutionStrategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.ExecutionStrategy(System.Func{Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecutionStrategy (getExecutionStrategy As Func(Of ExecutionStrategyContext, IExecutionStrategy)) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getExecutionStrategy" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy&gt;" />
      </Parameters>
      <Docs>
        <param name="getExecutionStrategy"> A function that returns a new instance of an execution strategy. </param>
        <summary>
                Configures the context to use the provided <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategy">
      <MemberSignature Language="C#" Value="public virtual TBuilder ExecutionStrategy (Func&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy&gt; getExecutionStrategy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBuilder ExecutionStrategy(class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy&gt; getExecutionStrategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.ExecutionStrategy(System.Func{Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecutionStrategy (getExecutionStrategy As Func(Of ExecutionStrategyDependencies, IExecutionStrategy)) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getExecutionStrategy" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy&gt;" />
      </Parameters>
      <Docs>
        <param name="getExecutionStrategy"> A function that returns a new instance of an execution strategy. </param>
        <summary>
                Configures the context to use the provided <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBatchSize">
      <MemberSignature Language="C#" Value="public virtual TBuilder MaxBatchSize (int maxBatchSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBuilder MaxBatchSize(int32 maxBatchSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MaxBatchSize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MaxBatchSize (maxBatchSize As Integer) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBatchSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxBatchSize"> The maximum number of statements. </param>
        <summary>
                Configures the maximum number of statements that will be included in commands sent to the database
                during <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationsAssembly">
      <MemberSignature Language="C#" Value="public virtual TBuilder MigrationsAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBuilder MigrationsAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MigrationsAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MigrationsAssembly (assemblyName As String) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"> The name of the assembly. </param>
        <summary>
                Configures the assembly where migrations are maintained for this context.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationsHistoryTable">
      <MemberSignature Language="C#" Value="public virtual TBuilder MigrationsHistoryTable (string tableName, string schema = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBuilder MigrationsHistoryTable(string tableName, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MigrationsHistoryTable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MigrationsHistoryTable (tableName As String, Optional schema As String = null) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName"> The name of the table. </param>
        <param name="schema"> The schema of the table. </param>
        <summary>
                Configures the name of the table used to record which migrations have been applied to the database.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionsBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.DbContextOptionsBuilder OptionsBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder OptionsBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.OptionsBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property OptionsBuilder As DbContextOptionsBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the core options builder.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="protected virtual TBuilder SetOption (Action&lt;TExtension&gt; setAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TBuilder SetOption(class System.Action`1&lt;!TExtension&gt; setAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.SetOption(System.Action{`1})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetOption (setAction As Action(Of TExtension)) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setAction" Type="System.Action&lt;TExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="setAction"> An action to set the option. </param>
        <summary>
                Sets an option by cloning the extension used to store the settings. This ensures the builder
                does not modify options that are already in use elsewhere.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseRelationalNulls">
      <MemberSignature Language="C#" Value="public virtual TBuilder UseRelationalNulls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBuilder UseRelationalNulls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.UseRelationalNulls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UseRelationalNulls () As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Configures the context to use relational database semantics when comparing null values. By default,
                Entity Framework will use C# semantics for null values, and generate SQL to compensate for differences
                in how the database handles nulls.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseRelationalNulls">
      <MemberSignature Language="C#" Value="public virtual TBuilder UseRelationalNulls (bool useRelationalNulls = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBuilder UseRelationalNulls(bool useRelationalNulls) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.UseRelationalNulls(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UseRelationalNulls (Optional useRelationalNulls As Boolean = true) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useRelationalNulls" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useRelationalNulls">To be added.</param>
        <summary>
                Configures the context to use relational database semantics when comparing null values. By default,
                Entity Framework will use C# semantics for null values, and generate SQL to compensate for differences
                in how the database handles nulls.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOption">
      <MemberSignature Language="C#" Value="protected virtual TBuilder WithOption (Func&lt;TExtension,TExtension&gt; setAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TBuilder WithOption(class System.Func`2&lt;!TExtension, !TExtension&gt; setAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.WithOption(System.Func{`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WithOption (setAction As Func(Of TExtension, TExtension)) As TBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setAction" Type="System.Func&lt;TExtension,TExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="setAction"> An action to set the option. </param>
        <summary>
                Sets an option by cloning the extension used to store the settings. This ensures the builder
                does not modify options that are already in use elsewhere.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>