<Type Name="RelationalModelValidatorDependencies" FullName="Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies">
  <TypeSignature Language="C#" Value="public sealed class RelationalModelValidatorDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RelationalModelValidatorDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RelationalModelValidatorDependencies" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalModelValidatorDependencies (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMapper As IRelationalTypeMapper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
      </Parameters>
      <Docs>
        <param name="typeMapper"> The type mapper. </param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator" />.
                </para>
          <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMapper">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper TypeMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper TypeMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies.TypeMapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeMapper As IRelationalTypeMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the type mapper.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (typeMapper As IRelationalTypeMapper) As RelationalModelValidatorDependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
      </Parameters>
      <Docs>
        <param name="typeMapper"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>