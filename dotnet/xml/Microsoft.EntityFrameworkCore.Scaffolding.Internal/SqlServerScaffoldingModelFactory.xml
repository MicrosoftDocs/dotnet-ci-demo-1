<Type Name="SqlServerScaffoldingModelFactory" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqlServerScaffoldingModelFactory">
  <TypeSignature Language="C#" Value="public class SqlServerScaffoldingModelFactory : Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerScaffoldingModelFactory extends Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqlServerScaffoldingModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerScaffoldingModelFactory&#xA;Inherits RelationalScaffoldingModelFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer.Design</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerScaffoldingModelFactory (Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory databaseModelFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService candidateNamingService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, class Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory databaseModelFactory, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService candidateNamingService) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqlServerScaffoldingModelFactory.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
        <Parameter Name="databaseModelFactory" Type="Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory" />
        <Parameter Name="candidateNamingService" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService" />
      </Parameters>
      <Docs>
        <param name="loggerFactory">To be added.</param>
        <param name="typeMapper">To be added.</param>
        <param name="databaseModelFactory">To be added.</param>
        <param name="candidateNamingService">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.IModel Create (string connectionString, Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet tableSelectionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Create(string connectionString, class Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet tableSelectionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqlServerScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="tableSelectionSet" Type="Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="tableSelectionSet">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeMapping">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetTypeMapping (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetTypeMapping(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqlServerScaffoldingModelFactory.GetTypeMapping(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTypeMapping (column As ColumnModel) As RelationalTypeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitColumn">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder VisitColumn (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder VisitColumn(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqlServerScaffoldingModelFactory.VisitColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitColumn (builder As EntityTypeBuilder, column As ColumnModel) As PropertyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="column">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIndex">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder VisitIndex (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder VisitIndex(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqlServerScaffoldingModelFactory.VisitIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitIndex (builder As EntityTypeBuilder, index As IndexModel) As IndexBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPrimaryKey">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder VisitPrimaryKey (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel table);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder VisitPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqlServerScaffoldingModelFactory.VisitPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitPrimaryKey (builder As EntityTypeBuilder, table As TableModel) As KeyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>