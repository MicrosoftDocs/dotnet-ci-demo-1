<Type Name="ISqlExpressionVisitor" FullName="Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor">
  <TypeSignature Language="C#" Value="public interface ISqlExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISqlExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISqlExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                Expression visitor dispatch methods for extension expressions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="VisitAlias">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitAlias (Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression aliasExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitAlias(class Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression aliasExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aliasExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression" />
      </Parameters>
      <Docs>
        <param name="aliasExpression"> The alias expression. </param>
        <summary>
                Visit an AliasExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitColumn">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitColumn (Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression columnExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitColumn(class Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression columnExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression" />
      </Parameters>
      <Docs>
        <param name="columnExpression"> The column expression. </param>
        <summary>
                Visit a ColumnExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitColumnReference">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitColumnReference (Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression columnReferenceExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitColumnReference(class Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression columnReferenceExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitColumnReference(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnReferenceExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="columnReferenceExpression"> The ColumnReferenceExpression expression. </param>
        <summary>
                Visit a ColumnReferenceExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCount">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitCount (Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression countExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitCount(class Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression countExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="countExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression" />
      </Parameters>
      <Docs>
        <param name="countExpression"> The count expression. </param>
        <summary>
                Visit a CountExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCrossJoin">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitCrossJoin (Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression crossJoinExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitCrossJoin(class Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression crossJoinExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crossJoinExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="crossJoinExpression"> The cross join expression. </param>
        <summary>
                Visit a CrossJoinExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCrossJoinLateral">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitCrossJoinLateral (Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression crossJoinLateralExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitCrossJoinLateral(class Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression crossJoinLateralExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitCrossJoinLateral(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crossJoinLateralExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinLateralExpression" />
      </Parameters>
      <Docs>
        <param name="crossJoinLateralExpression"> The cross join lateral expression. </param>
        <summary>
                Visit a CrossJoinLateralExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExists">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitExists (Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression existsExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitExists(class Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression existsExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existsExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression" />
      </Parameters>
      <Docs>
        <param name="existsExpression"> The exists expression. </param>
        <summary>
                Visits an ExistsExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExplicitCast">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitExplicitCast (Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression explicitCastExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitExplicitCast(class Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression explicitCastExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitCastExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression" />
      </Parameters>
      <Docs>
        <param name="explicitCastExpression"> The explicit cast expression. </param>
        <summary>
                Visit an ExplicitCastExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFromSql">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitFromSql (Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression fromSqlExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitFromSql(class Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression fromSqlExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromSqlExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression" />
      </Parameters>
      <Docs>
        <param name="fromSqlExpression"> from SQL expression. </param>
        <summary>
                Visit a FromSqlExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIn">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitIn (Microsoft.EntityFrameworkCore.Query.Expressions.InExpression inExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitIn(class Microsoft.EntityFrameworkCore.Query.Expressions.InExpression inExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.InExpression" />
      </Parameters>
      <Docs>
        <param name="inExpression"> The in expression. </param>
        <summary>
                Visit an InExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInnerJoin">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitInnerJoin (Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression innerJoinExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitInnerJoin(class Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression innerJoinExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerJoinExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression" />
      </Parameters>
      <Docs>
        <param name="innerJoinExpression"> The inner join expression. </param>
        <summary>
                Visit an InnerJoinExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIsNull">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitIsNull (Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression isNullExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitIsNull(class Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression isNullExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNullExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression" />
      </Parameters>
      <Docs>
        <param name="isNullExpression"> The is null expression. </param>
        <summary>
                Visit an IsNullExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLateralJoin">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitLateralJoin (Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression lateralJoinExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitLateralJoin(class Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression lateralJoinExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lateralJoinExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression" />
      </Parameters>
      <Docs>
        <param name="lateralJoinExpression"> The lateral join expression. </param>
        <summary>
                Visit a LateralJoinExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLeftOuterJoin">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitLeftOuterJoin (Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression leftOuterJoinExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitLeftOuterJoin(class Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression leftOuterJoinExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftOuterJoinExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression" />
      </Parameters>
      <Docs>
        <param name="leftOuterJoinExpression"> The left outer join expression. </param>
        <summary>
                Visit a LeftOuterJoinExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLike">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitLike (Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression likeExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitLike(class Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression likeExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="likeExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression" />
      </Parameters>
      <Docs>
        <param name="likeExpression"> The like expression. </param>
        <summary>
                Visit a LikeExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMax">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitMax (Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression maxExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitMax(class Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression maxExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression" />
      </Parameters>
      <Docs>
        <param name="maxExpression"> The maximum expression. </param>
        <summary>
                Visit a MaxExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMin">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitMin (Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression minExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitMin(class Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression minExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression" />
      </Parameters>
      <Docs>
        <param name="minExpression"> The minimum expression. </param>
        <summary>
                Visit a MinExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyParameter">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitPropertyParameter (Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression propertyParameterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitPropertyParameter(class Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression propertyParameterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyParameterExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression" />
      </Parameters>
      <Docs>
        <param name="propertyParameterExpression"> The property parameter expression. </param>
        <summary>
                Visit a PropertyParameterExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSelect">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitSelect (Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSelect(class Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression"> The select expression. </param>
        <summary>
                Visit a SelectExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlFragment">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitSqlFragment (Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression sqlFragmentExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlFragment(class Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression sqlFragmentExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSqlFragment(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFragmentExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SqlFragmentExpression" />
      </Parameters>
      <Docs>
        <param name="sqlFragmentExpression"> The SqlFragmentExpression expression. </param>
        <summary>
                Visit a SqlFragmentExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlFunction">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitSqlFunction (Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression sqlFunctionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlFunction(class Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression sqlFunctionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFunctionExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="sqlFunctionExpression"> The SQL function expression. </param>
        <summary>
                Visit a SqlFunctionExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitStringCompare">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitStringCompare (Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression stringCompareExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitStringCompare(class Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression stringCompareExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringCompareExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression" />
      </Parameters>
      <Docs>
        <param name="stringCompareExpression"> The string compare expression. </param>
        <summary>
                Visit a StringCompareExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSum">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitSum (Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression sumExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSum(class Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression sumExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sumExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression" />
      </Parameters>
      <Docs>
        <param name="sumExpression"> The sum expression. </param>
        <summary>
                Visit a SumExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTable">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression VisitTable (Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression tableExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitTable(class Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression tableExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression" />
      </Parameters>
      <Docs>
        <param name="tableExpression"> The table expression. </param>
        <summary>
                Visit a TableExpression.
            </summary>
        <returns>
                An Expression.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>