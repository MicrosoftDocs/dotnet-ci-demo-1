<Type Name="BackingFieldConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention">
  <TypeSignature Language="C#" Value="public class BackingFieldConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyAddedConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackingFieldConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyAddedConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class BackingFieldConvention&#xA;Implements INavigationAddedConvention, IPropertyAddedConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyAddedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackingFieldConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (propertyBuilder As InternalPropertyBuilder) As InternalPropertyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="protected virtual void Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryMatchFieldName">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.FieldInfo TryMatchFieldName (Type entityType, Type propertyType, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.FieldInfo TryMatchFieldName(class System.Type entityType, class System.Type propertyType, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.TryMatchFieldName(System.Type,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryMatchFieldName (entityType As Type, propertyType As Type, propertyName As String) As FieldInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>