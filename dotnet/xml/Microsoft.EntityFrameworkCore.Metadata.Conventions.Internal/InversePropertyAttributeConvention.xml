<Type Name="InversePropertyAttributeConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention">
  <TypeSignature Language="C#" Value="public class InversePropertyAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InversePropertyAttributeConvention extends Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1&lt;class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class InversePropertyAttributeConvention&#xA;Inherits NavigationAttributeEntityTypeConvention(Of InversePropertyAttribute)" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TAttribute">System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InversePropertyAttributeConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InversePropertyAttributeConvention (Microsoft.EntityFrameworkCore.Storage.ITypeMapper typeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ITypeMapper typeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMapper As ITypeMapper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMapper" />
      </Parameters>
      <Docs>
        <param name="typeMapper">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, System.Reflection.PropertyInfo navigationPropertyInfo, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, navigationPropertyInfo As PropertyInfo, attribute As InversePropertyAttribute) As InternalEntityTypeBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, System.Reflection.PropertyInfo navigationPropertyInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As InversePropertyAttribute) As InternalEntityTypeBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public override bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType, System.Reflection.PropertyInfo navigationPropertyInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, oldBaseType As EntityType, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As InversePropertyAttribute) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="oldBaseType">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public override bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, Type type, System.Reflection.PropertyInfo navigationPropertyInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, class System.Type type, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.Type,System.Reflection.PropertyInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="type">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyIgnored">
      <MemberSignature Language="C#" Value="public override bool ApplyIgnored (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, System.Reflection.PropertyInfo navigationPropertyInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ApplyIgnored(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ApplyIgnored (entityTypeBuilder As InternalEntityTypeBuilder, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As InversePropertyAttribute) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseNavigationsAnnotationName">
      <MemberSignature Language="C#" Value="public const string InverseNavigationsAnnotationName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string InverseNavigationsAnnotationName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.InverseNavigationsAnnotationName" />
      <MemberSignature Language="VB.NET" Value="Public Const InverseNavigationsAnnotationName As String " />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbiguous">
      <MemberSignature Language="C#" Value="public static bool IsAmbiguous (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType entityType, System.Reflection.PropertyInfo navigation, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType targetEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAmbiguous(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType entityType, class System.Reflection.PropertyInfo navigation, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType targetEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.IsAmbiguous(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="navigation" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="targetEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="targetEntityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>