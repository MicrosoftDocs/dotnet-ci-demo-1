<Type Name="QueryCompilationContext" FullName="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext">
  <TypeSignature Language="C#" Value="public class QueryCompilationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryCompilationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryCompilationContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A query compilation context. The primary data structure representing the state/components
                used during query compilation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryCompilationContext (Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies dependencies, Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider linqOperatorProvider, bool trackQueryResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider linqOperatorProvider, bool trackQueryResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies,Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryCompilationContextDependencies, linqOperatorProvider As ILinqOperatorProvider, trackQueryResults As Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies" />
        <Parameter Name="linqOperatorProvider" Type="Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider" />
        <Parameter Name="trackQueryResults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="linqOperatorProvider">To be added.</param>
        <param name="trackQueryResults">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryCompilationContext (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.Extensions.Logging.ILogger logger, Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory entityQueryModelVisitorFactory, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory requiresMaterializationExpressionVisitorFactory, Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider linqOperatorProvider, Type contextType, bool trackQueryResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.Extensions.Logging.ILogger logger, class Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory entityQueryModelVisitorFactory, class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory requiresMaterializationExpressionVisitorFactory, class Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider linqOperatorProvider, class System.Type contextType, bool trackQueryResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (model As IModel, logger As ILogger, entityQueryModelVisitorFactory As IEntityQueryModelVisitorFactory, requiresMaterializationExpressionVisitorFactory As IRequiresMaterializationExpressionVisitorFactory, linqOperatorProvider As ILinqOperatorProvider, contextType As Type, trackQueryResults As Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
        <Parameter Name="entityQueryModelVisitorFactory" Type="Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory" />
        <Parameter Name="requiresMaterializationExpressionVisitorFactory" Type="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory" />
        <Parameter Name="linqOperatorProvider" Type="Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider" />
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="trackQueryResults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="logger">To be added.</param>
        <param name="entityQueryModelVisitorFactory">To be added.</param>
        <param name="requiresMaterializationExpressionVisitorFactory">To be added.</param>
        <param name="linqOperatorProvider">To be added.</param>
        <param name="contextType">To be added.</param>
        <param name="trackQueryResults">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotations">
      <MemberSignature Language="C#" Value="public virtual void AddAnnotations (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; annotations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAnnotations(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddAnnotations(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAnnotations (annotations As IEnumerable(Of IQueryAnnotation))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotations" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt;" />
      </Parameters>
      <Docs>
        <param name="annotations">The query annotations.</param>
        <summary>
                Adds query annotations to the exisiting list.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdateMapping">
      <MemberSignature Language="C#" Value="public virtual void AddOrUpdateMapping (Remotion.Linq.Clauses.IQuerySource querySource, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOrUpdateMapping(class Remotion.Linq.Clauses.IQuerySource querySource, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddOrUpdateMapping(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOrUpdateMapping (querySource As IQuerySource, entityType As IEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="querySource">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Gets the entity type mapped to the given query source
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdateMapping">
      <MemberSignature Language="C#" Value="public virtual void AddOrUpdateMapping (Remotion.Linq.Clauses.IQuerySource querySource, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOrUpdateMapping(class Remotion.Linq.Clauses.IQuerySource querySource, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddOrUpdateMapping(Remotion.Linq.Clauses.IQuerySource,System.Linq.Expressions.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <param name="expression"> The expression mapped to the query source. </param>
        <summary>
                Adds or updates the expression mapped to a query source.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQuerySourceRequiringMaterialization">
      <MemberSignature Language="C#" Value="public virtual void AddQuerySourceRequiringMaterialization (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddQuerySourceRequiringMaterialization(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddQuerySourceRequiringMaterialization(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddQuerySourceRequiringMaterialization (querySource As IQuerySource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <summary>
                Add a query source to the set of query sources requiring materialization.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrackableInclude">
      <MemberSignature Language="C#" Value="public virtual void AddTrackableInclude (Remotion.Linq.Clauses.IQuerySource querySource, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; navigationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTrackableInclude(class Remotion.Linq.Clauses.IQuerySource querySource, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; navigationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddTrackableInclude(Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddTrackableInclude (querySource As IQuerySource, navigationPath As IReadOnlyList(Of INavigation))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
        <Parameter Name="navigationPath" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <param name="navigationPath"> The included navigation path. </param>
        <summary>
                Adds a trackable include.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneAnnotations">
      <MemberSignature Language="C#" Value="public virtual void CloneAnnotations (Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloneAnnotations(class Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CloneAnnotations(Remotion.Linq.Clauses.QuerySourceMapping,Remotion.Linq.QueryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySourceMapping" Type="Remotion.Linq.Clauses.QuerySourceMapping" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="querySourceMapping">A query source mapping.</param>
        <param name="queryModel">A query model.</param>
        <summary>
                Creates cloned annotations targeting a new QueryModel.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public virtual Type ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContextType As Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the type of the context./
            </summary>
        <value>
                The type of the context.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryModelVisitor">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor CreateQueryModelVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor CreateQueryModelVisitor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryModelVisitor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueryModelVisitor () As EntityQueryModelVisitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Creates query model visitor.
            </summary>
        <returns>
                The new query model visitor.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryModelVisitor">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor CreateQueryModelVisitor (Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor parentEntityQueryModelVisitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor CreateQueryModelVisitor(class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor parentEntityQueryModelVisitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryModelVisitor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueryModelVisitor (parentEntityQueryModelVisitor As EntityQueryModelVisitor) As EntityQueryModelVisitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentEntityQueryModelVisitor" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />
      </Parameters>
      <Docs>
        <param name="parentEntityQueryModelVisitor"> The parent entity query model visitor. </param>
        <summary>
                Creates query model visitor.
            </summary>
        <returns>
                The new query model visitor.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineQueryBufferRequirement">
      <MemberSignature Language="C#" Value="public virtual void DetermineQueryBufferRequirement (Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetermineQueryBufferRequirement(class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.DetermineQueryBufferRequirement(Remotion.Linq.QueryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="queryModel"> The query model. </param>
        <summary>
                Determine if the query requires a query buffer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType FindEntityType (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType FindEntityType(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.FindEntityType(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindEntityType (querySource As IQuerySource) As IEntityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
      </Parameters>
      <Docs>
        <param name="querySource">To be added.</param>
        <summary>
                Gets the entity type mapped to the given query source
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindQuerySourcesRequiringMaterialization">
      <MemberSignature Language="C#" Value="public virtual void FindQuerySourcesRequiringMaterialization (Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor queryModelVisitor, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindQuerySourcesRequiringMaterialization(class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor queryModelVisitor, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.FindQuerySourcesRequiringMaterialization(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.QueryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryModelVisitor" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="queryModelVisitor"> The query model visitor. </param>
        <param name="queryModel"> The query model. </param>
        <summary>
                Determines all query sources that require materialization.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackableIncludes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt; GetTrackableIncludes (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt; GetTrackableIncludes(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.GetTrackableIncludes(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrackableIncludes (querySource As IQuerySource) As IReadOnlyList(Of IReadOnlyList(Of INavigation))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <summary>
                Gets all trackable includes for a given query source.
            </summary>
        <returns>
                The trackable includes.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreQueryFilters">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreQueryFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreQueryFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IgnoreQueryFilters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IgnoreQueryFilters As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether this query should have model-level query filters applied.
            </summary>
        <value>
                true if query filters should be applied, false if not.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIncludeQuery">
      <MemberSignature Language="C#" Value="public virtual bool IsIncludeQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIncludeQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsIncludeQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsIncludeQuery As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The query has at least one Include operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQueryBufferRequired">
      <MemberSignature Language="C#" Value="public bool IsQueryBufferRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsQueryBufferRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsQueryBufferRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsQueryBufferRequired As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether this query requires a query buffer.
            </summary>
        <value>
                true if this query requires a query buffer, false if not.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingQuery">
      <MemberSignature Language="C#" Value="public virtual bool IsTrackingQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsTrackingQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsTrackingQuery As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether this is a tracking query.
            </summary>
        <value>
                true if this object is a tracking query, false if not.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinqOperatorProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider LinqOperatorProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider LinqOperatorProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.LinqOperatorProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LinqOperatorProvider As ILinqOperatorProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the linq operator provider.
            </summary>
        <value>
                The linq operator provider.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; Logger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; Logger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Logger" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Logger As IDiagnosticsLogger(Of DbLoggerCategory.Query)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the logger.
            </summary>
        <value>
                The logger.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Model" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Model As IModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the model.
            </summary>
        <value>
                The model.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAnnotations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; QueryAnnotations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; QueryAnnotations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryAnnotations As IReadOnlyCollection(Of IQueryAnnotation)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the query annotations.
            </summary>
        <value>
                The query annotations.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySourceMapping">
      <MemberSignature Language="C#" Value="public virtual Remotion.Linq.Clauses.QuerySourceMapping QuerySourceMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Remotion.Linq.Clauses.QuerySourceMapping QuerySourceMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QuerySourceMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QuerySourceMapping As QuerySourceMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Clauses.QuerySourceMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the query source mapping.
            </summary>
        <value>
                The query source mapping.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySourceRequiresMaterialization">
      <MemberSignature Language="C#" Value="public virtual bool QuerySourceRequiresMaterialization (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuerySourceRequiresMaterialization(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QuerySourceRequiresMaterialization(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuerySourceRequiresMaterialization (querySource As IQuerySource) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <summary>
                Determine whether or not a query source requires materialization.
            </summary>
        <returns>
                true if it requires materialization, false if not.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackQueryResults">
      <MemberSignature Language="C#" Value="public virtual bool TrackQueryResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackQueryResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.TrackQueryResults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TrackQueryResults As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating the default configured tracking behavior.
            </summary>
        <value>
                true if the default is to track query results, false if not.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMapping">
      <MemberSignature Language="C#" Value="public virtual void UpdateMapping (Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateMapping(class Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.UpdateMapping(Remotion.Linq.Clauses.QuerySourceMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySourceMapping" Type="Remotion.Linq.Clauses.QuerySourceMapping" />
      </Parameters>
      <Docs>
        <param name="querySourceMapping"> The new query source mapping </param>
        <summary>
                Updates the query source mappings to the new query sources
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>