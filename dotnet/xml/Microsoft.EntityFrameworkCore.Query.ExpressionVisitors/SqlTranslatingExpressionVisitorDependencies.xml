<Type Name="SqlTranslatingExpressionVisitorDependencies" FullName="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies">
  <TypeSignature Language="C#" Value="public sealed class SqlTranslatingExpressionVisitorDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTranslatingExpressionVisitorDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTranslatingExpressionVisitorDependencies" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in 
                    your constructor so that an instance will be created and injected automatically by the 
                    dependency injection container. To create an instance with some dependent services replaced, 
                    first resolve the object from the dependency injection container, then replace selected 
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlTranslatingExpressionVisitorDependencies (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator, class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator, class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (compositeExpressionFragmentTranslator As IExpressionFragmentTranslator, methodCallTranslator As ICompositeMethodCallTranslator, memberTranslator As IMemberTranslator, relationalTypeMapper As IRelationalTypeMapper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compositeExpressionFragmentTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator" />
        <Parameter Name="methodCallTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator" />
        <Parameter Name="memberTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator" />
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
      </Parameters>
      <Docs>
        <param name="compositeExpressionFragmentTranslator"> The composite expression fragment translator. </param>
        <param name="methodCallTranslator"> The method call translator. </param>
        <param name="memberTranslator"> The member translator. </param>
        <param name="relationalTypeMapper"> The relational type mapper. </param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
                </para>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeExpressionFragmentTranslator">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator CompositeExpressionFragmentTranslator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator CompositeExpressionFragmentTranslator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.CompositeExpressionFragmentTranslator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositeExpressionFragmentTranslator As IExpressionFragmentTranslator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The composite expression fragment translator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberTranslator">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator MemberTranslator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator MemberTranslator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.MemberTranslator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberTranslator As IMemberTranslator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The member translator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodCallTranslator">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator MethodCallTranslator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator MethodCallTranslator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.MethodCallTranslator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodCallTranslator As ICompositeMethodCallTranslator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The method call translator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalTypeMapper">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper RelationalTypeMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper RelationalTypeMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.RelationalTypeMapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationalTypeMapper As IRelationalTypeMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The relational type mapper.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (methodCallTranslator As ICompositeMethodCallTranslator) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodCallTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator" />
      </Parameters>
      <Docs>
        <param name="methodCallTranslator"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (compositeExpressionFragmentTranslator As IExpressionFragmentTranslator) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositeExpressionFragmentTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator" />
      </Parameters>
      <Docs>
        <param name="compositeExpressionFragmentTranslator"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (memberTranslator As IMemberTranslator) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator" />
      </Parameters>
      <Docs>
        <param name="memberTranslator"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (relationalTypeMapper As IRelationalTypeMapper) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
      </Parameters>
      <Docs>
        <param name="relationalTypeMapper"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>